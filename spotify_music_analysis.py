# -*- coding: utf-8 -*-
"""spotify_music_analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1V9MmWPMBjvNZPG_MTZaD6oNnITfk0PCF

* https://www.kaggle.com/code/aeryan/spotify-music-analysis
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import matplotlib.ticker as ticker
from sklearn import datasets, linear_model #
from sklearn.decomposition import PCA #
from sklearn.preprocessing import MinMaxScaler #
from sklearn.manifold import TSNE # 

# %matplotlib inline # 

data_frame = pd.read_csv('/content/spotify.csv')
data_frame = data_frame.drop("Unnamed: 0", axis = "columns")
data_frame.head()

x = data_frame["danceability"].values
y = data_frame["valence"].values
# print(type(x)) # numpy.ndarray
# print(x.shape) # (2017, )
x = x.reshape(x.shape[0], 1) 
y = y.reshape(y.shape[0], 1)

regr = linear_model.LinearRegression() #
regr.fit(x, y) #

fig = plt.figure(figsize = (6, 6))
fig.suptitle("Coreelation between danceability and song mood")

ax = plt.subplot(1, 1, 1)
ax.scatter(x, y, alpha = 0.5)
ax.plot(x, regr.predict(x), color = "red", linewidth = 3) #
plt.xticks(()) #
plt.yticks(()) #

ax.xaxis.set_major_locator(ticker.MultipleLocator(0.1))
ax.xaxis.set_minor_locator(ticker.MultipleLocator(0.02))

ax.yaxis.set_major_locator(ticker.MultipleLocator(0.1))
ax.yaxis.set_minor_locator(ticker.MultipleLocator(0.02))

plt.xlabel("danceability")
plt.ylabel("valence")

plt.show()

x = "danceability"
y = "valence"

fig, (ax1, ax2) = plt.subplots(1, 2, sharey = False, sharex = False, figsize = (10, 5))
fig.suptitle("Histograms")
h = ax2.hist2d(data_frame[x], data_frame[y], bins = 20)
ax1.hist(data_frame["energy"])

ax2.set_xlabel(x)
ax2.set_ylabel(y)

ax1.set_xlabel("energy")

plt.colorbar(h[3], ax = ax2) #

plt.show()

chosen = ["energy", "liveness", "tempo", "valence", "loudness", "speechiness", "acousticness",
          "danceability", "instrumentalness"]
text1 = data_frame["artist"] + ' - ' + data_frame["song_title"]
text2 = text1.values 

#X = data_frame.drop(droppable, axis = 1).values
X = data_frame[chosen].values #
y = data_frame["danceability"].values

